package selenium_ide;

import org.testng.Assert;
// Generated by Selenium IDE
import org.testng.annotations.AfterMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Parameters;
//import static org.hamcrest.CoreMatchers.is;
//import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class Lab4Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @BeforeMethod
  @Parameters("browser")
  public void setUp(String browser) {
  	if(browser.equalsIgnoreCase("chrome")) {
  		WebDriverManager.chromedriver().setup();
  		driver = new ChromeDriver();
  		js = (JavascriptExecutor) driver;
  		vars = new HashMap<String, Object>();
  	}else if(browser.equalsIgnoreCase("ie")) {
  		WebDriverManager.edgedriver().setup();
  		driver = new EdgeDriver();
  		js = (JavascriptExecutor) driver;
  		vars = new HashMap<String, Object>();
  		
  	}
    }
  @AfterMethod
public void tearDown() {
    driver.quit();
  }
  @Test
  public void lab4() {
    driver.get("https://tutorialsninja.com/demo/index.php");
    driver.manage().window().setSize(new Dimension(1014, 692));

    driver.findElement(By.linkText("Desktops")).click();
    driver.findElement(By.linkText("Mac (1)")).click();

    driver.findElement(By.id("input-sort")).click();

    driver.findElement(By.cssSelector("#input-sort > option:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".button-group > button:nth-child(1)")).click();

    
    driver.findElement(By.name("search")).click();
    driver.findElement(By.name("search")).sendKeys("Mobile");
    driver.findElement(By.xpath("/html/body/header/div/div/div[2]/div/span/button")).click();
    
    
    driver.findElement(By.name("description")).click();
    driver.findElement(By.id("button-search")).click();
    driver.findElement(By.name("search")).clear();
    driver.findElement(By.name("search")).click();
    driver.findElement(By.name("search")).sendKeys("Monitors");
    driver.findElement(By.xpath("/html/body/header/div/div/div[2]/div/span/button")).click();
  }
}
